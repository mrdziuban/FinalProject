<% team = @topic.forum.team %>

<style>
  body {
    <% if team %>
      background: <%= team.background_color %>;
    <% else %>
      background: #454545;
    <% end %>
  }

  <% if team %>
    .navbar a {
      color: <%= team.luminance(0.3) %>;
    }

    .players-option {
      color: <%= team.luminance(0.3) %>;
    }

    .topic-container h2 {
      color: <%= team.background_color %>;
      text-shadow: 1px 1px 1px #000;
    }

    input[type=text] {
      border: 1px solid <%= team.background_color %>;
      color: <%= team.background_color %>;
    }

    .new-topic, .edit-topic {
      border: 3px solid <%= team.background_color %>;
    }

    .new-topic h2, .edit-topic h2 {
      color: <%= team.background_color %>;
    }

    input[type=submit] {
      <% start = team.background_color %>
      <% final = team.luminance(-0.4) %>
      border-radius: 3px;
      width: 80px;
      height: 30px;
      color: white;
      font-size: 12px;
      border: 1px solid #292929;
      background: -webkit-gradient(linear, left top, left bottom, from(<%= start %>), to(<%= final %>));
      background: -moz-linear-gradient(top, <%= start %>, <%= final %>);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='<%= start %>', endColorstr='<%= final %>');
    }

    input[type=submit]:active {
      <% start = team.luminance(-0.15) %>
      <% final = team.luminance(-0.4) %>
      background: -webkit-gradient(linear, left top, left bottom, from(<%= final %>), to(<%= start %>));
      background: -moz-linear-gradient(top, <%= final %>, <%= start %>);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='<%= final %>', endColorstr='<%= start %>');
    }

    .edit-topic-button {
      <% start = team.background_color %>
      <% final = team.luminance(-0.4) %>
      border: 1px solid #292929;
      background: -webkit-gradient(linear, left top, left bottom, from(<%= start %>), to(<%= final %>));
      background: -moz-linear-gradient(top, <%= start %>, <%= final %>);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='<%= start %>', endColorstr='<%= final %>');
    }

    .edit-topic-button:active {
      <% start = team.luminance(-0.15) %>
      <% final = team.luminance(-0.4) %>
      background: -webkit-gradient(linear, left top, left bottom, from(<%= final %>), to(<%= start %>));
      background: -moz-linear-gradient(top, <%= final %>, <%= start %>);
      filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='<%= final %>', endColorstr='<%= start %>');
    }

    span.tt-dropdown-menu {
      border-bottom: 1px solid <%= team.background_color %>;
    }

    div.tt-suggestion {
      border: 1px solid <%= team.background_color %>;
      border-bottom: 0;
    }

    .more-link {
      color: <%= team.background_color %>;
    }

    #wmd-input {
      border: 1px solid <%= team.background_color %>;
    }
  <% end %>
</style>

<div class="edit-topic-hidden">
  <section class="edit-topic">
    <div class="form-submitting-hidden"></div>
    <h2>New topic</h2>
    <%= form_for :topic do |f| %>
      <h3>Title</h3>
      <%= f.text_field :title, :class => "title-field" %>
      <h3>Description (optional)</h3>
      <div id="wmd-button-bar"></div>
      <textarea id="wmd-input" name="topic[description]"><%= ReverseMarkdown.parse(@topic.description) %></textarea><br>
      
      <div id="wmd-preview"></div>
      <input type="hidden" name="_method" value="put">
      <%= f.submit "Update", :class => "update-topic" %>
    <% end %>
  </section>
</div>

<section class="topic-container">
  <%= render partial: "topic", locals: {topic: @topic} %>
</section>

<script>
  $(document).ready(function () {
    var topic = $(".topic-container");

    topic.on("click", ".edit-topic-button", function () {
      $("div.edit-topic-hidden").fadeIn("fast");

      setInterval(function () {
        if ($(".title-field").val() === "") {
          $(".update-topic").attr("disabled", true);
        }
        else {
          $(".update-topic").attr("disabled", false);
        }
      }, 100);
    });

    $(".edit-topic").on("click", function (event) {
      event.stopPropagation();
    });

    $("div.edit-topic-hidden").on("click", function () {
      $(this).fadeOut("fast");
    });

    $(".update-topic").on("click", function (event) {
      $(".form-submitting-hidden").html('<%= image_tag "loading.gif", :class => "loading-gif" %>')
      $(".form-submitting-hidden").fadeIn("fast");
      // event.preventDefault();

      // var that = this;
      // var formData = $(that.form).serialize();

      // $.ajax({
      //   url: that.form.action,
      //   type: "PUT",
      //   data: formData,
      //   success: function (data) {
      //     $("div.edit-topic-hidden").fadeOut("fast");
      //     $(".form-submitting-hidden").html("");
      //     $(".form-submitting-hidden").fadeOut("fast");
      //     $(that.form).each(function () {this.reset()});
      //     $(".topic-container").html(data)
      //   }
      // });
    });

    topic.on("click", ".more-link", function (event) {
      event.preventDefault();
      var a = $(this);

      $.get(a.attr("href"), function (data) {
        $(".topics-list").append(data)
        if ($(".forum-container li").length % 20 !== 0) {
          a.remove();
        }
      });
    })
  });
</script>